
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ABS AND EQ GT GTE LPAREN LT LTE MINUS NOTEQ NUMBER OR RPAREN STRING VARexpression : expression AND expression\n| expression OR expressionexpression : LPAREN expression RPARENexpression : conditioncondition : ABS LPAREN VAR MINUS VAR RPAREN GT NUMBERcondition : VAR EQ NUMBER\n| VAR GT NUMBER\n| VAR LT NUMBER\n| VAR GTE NUMBER\n| VAR LTE NUMBER\n| VAR NOTEQ NUMBER\n| VAR EQ STRING\n| VAR NOTEQ STRING'
    
_lr_action_items = {'LPAREN':([0,2,4,6,7,],[2,2,9,2,2,]),'ABS':([0,2,6,7,],[4,4,4,4,]),'VAR':([0,2,6,7,9,28,],[5,5,5,5,19,29,]),'$end':([1,3,16,17,18,20,21,22,23,24,25,26,27,32,],[0,-4,-1,-2,-3,-6,-12,-7,-8,-9,-10,-11,-13,-5,]),'AND':([1,3,8,16,17,18,20,21,22,23,24,25,26,27,32,],[6,-4,6,6,6,-3,-6,-12,-7,-8,-9,-10,-11,-13,-5,]),'OR':([1,3,8,16,17,18,20,21,22,23,24,25,26,27,32,],[7,-4,7,7,7,-3,-6,-12,-7,-8,-9,-10,-11,-13,-5,]),'RPAREN':([3,8,16,17,18,20,21,22,23,24,25,26,27,29,32,],[-4,18,-1,-2,-3,-6,-12,-7,-8,-9,-10,-11,-13,30,-5,]),'EQ':([5,],[10,]),'GT':([5,30,],[11,31,]),'LT':([5,],[12,]),'GTE':([5,],[13,]),'LTE':([5,],[14,]),'NOTEQ':([5,],[15,]),'NUMBER':([10,11,12,13,14,15,31,],[20,22,23,24,25,26,32,]),'STRING':([10,15,],[21,27,]),'MINUS':([19,],[28,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,2,6,7,],[1,8,16,17,]),'condition':([0,2,6,7,],[3,3,3,3,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> expression AND expression','expression',3,'p_expression_logical','parsing.py',80),
  ('expression -> expression OR expression','expression',3,'p_expression_logical','parsing.py',81),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','parsing.py',85),
  ('expression -> condition','expression',1,'p_expression_condition','parsing.py',89),
  ('condition -> ABS LPAREN VAR MINUS VAR RPAREN GT NUMBER','condition',8,'p_condition_abs','parsing.py',93),
  ('condition -> VAR EQ NUMBER','condition',3,'p_condition_compare','parsing.py',99),
  ('condition -> VAR GT NUMBER','condition',3,'p_condition_compare','parsing.py',100),
  ('condition -> VAR LT NUMBER','condition',3,'p_condition_compare','parsing.py',101),
  ('condition -> VAR GTE NUMBER','condition',3,'p_condition_compare','parsing.py',102),
  ('condition -> VAR LTE NUMBER','condition',3,'p_condition_compare','parsing.py',103),
  ('condition -> VAR NOTEQ NUMBER','condition',3,'p_condition_compare','parsing.py',104),
  ('condition -> VAR EQ STRING','condition',3,'p_condition_compare','parsing.py',105),
  ('condition -> VAR NOTEQ STRING','condition',3,'p_condition_compare','parsing.py',106),
]
