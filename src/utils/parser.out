Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> expression
Rule 1     expression -> expression AND expression
Rule 2     expression -> expression OR expression
Rule 3     expression -> LPAREN expression RPAREN
Rule 4     expression -> condition
Rule 5     condition -> ABS LPAREN VAR MINUS VAR RPAREN GT NUMBER
Rule 6     condition -> VAR EQ NUMBER
Rule 7     condition -> VAR GT NUMBER
Rule 8     condition -> VAR LT NUMBER
Rule 9     condition -> VAR GTE NUMBER
Rule 10    condition -> VAR LTE NUMBER
Rule 11    condition -> VAR NOTEQ NUMBER
Rule 12    condition -> VAR EQ STRING
Rule 13    condition -> VAR NOTEQ STRING

Terminals, with rules where they appear

ABS                  : 5
AND                  : 1
EQ                   : 6 12
GT                   : 5 7
GTE                  : 9
LPAREN               : 3 5
LT                   : 8
LTE                  : 10
MINUS                : 5
NOTEQ                : 11 13
NUMBER               : 5 6 7 8 9 10 11
OR                   : 2
RPAREN               : 3 5
STRING               : 12 13
VAR                  : 5 5 6 7 8 9 10 11 12 13
error                : 

Nonterminals, with rules where they appear

condition            : 4
expression           : 1 1 2 2 3 0

Parsing method: LALR

state 0

    (0) S' -> . expression
    (1) expression -> . expression AND expression
    (2) expression -> . expression OR expression
    (3) expression -> . LPAREN expression RPAREN
    (4) expression -> . condition
    (5) condition -> . ABS LPAREN VAR MINUS VAR RPAREN GT NUMBER
    (6) condition -> . VAR EQ NUMBER
    (7) condition -> . VAR GT NUMBER
    (8) condition -> . VAR LT NUMBER
    (9) condition -> . VAR GTE NUMBER
    (10) condition -> . VAR LTE NUMBER
    (11) condition -> . VAR NOTEQ NUMBER
    (12) condition -> . VAR EQ STRING
    (13) condition -> . VAR NOTEQ STRING

    LPAREN          shift and go to state 2
    ABS             shift and go to state 4
    VAR             shift and go to state 5

    expression                     shift and go to state 1
    condition                      shift and go to state 3

state 1

    (0) S' -> expression .
    (1) expression -> expression . AND expression
    (2) expression -> expression . OR expression

    AND             shift and go to state 6
    OR              shift and go to state 7


state 2

    (3) expression -> LPAREN . expression RPAREN
    (1) expression -> . expression AND expression
    (2) expression -> . expression OR expression
    (3) expression -> . LPAREN expression RPAREN
    (4) expression -> . condition
    (5) condition -> . ABS LPAREN VAR MINUS VAR RPAREN GT NUMBER
    (6) condition -> . VAR EQ NUMBER
    (7) condition -> . VAR GT NUMBER
    (8) condition -> . VAR LT NUMBER
    (9) condition -> . VAR GTE NUMBER
    (10) condition -> . VAR LTE NUMBER
    (11) condition -> . VAR NOTEQ NUMBER
    (12) condition -> . VAR EQ STRING
    (13) condition -> . VAR NOTEQ STRING

    LPAREN          shift and go to state 2
    ABS             shift and go to state 4
    VAR             shift and go to state 5

    expression                     shift and go to state 8
    condition                      shift and go to state 3

state 3

    (4) expression -> condition .

    AND             reduce using rule 4 (expression -> condition .)
    OR              reduce using rule 4 (expression -> condition .)
    $end            reduce using rule 4 (expression -> condition .)
    RPAREN          reduce using rule 4 (expression -> condition .)


state 4

    (5) condition -> ABS . LPAREN VAR MINUS VAR RPAREN GT NUMBER

    LPAREN          shift and go to state 9


state 5

    (6) condition -> VAR . EQ NUMBER
    (7) condition -> VAR . GT NUMBER
    (8) condition -> VAR . LT NUMBER
    (9) condition -> VAR . GTE NUMBER
    (10) condition -> VAR . LTE NUMBER
    (11) condition -> VAR . NOTEQ NUMBER
    (12) condition -> VAR . EQ STRING
    (13) condition -> VAR . NOTEQ STRING

    EQ              shift and go to state 10
    GT              shift and go to state 11
    LT              shift and go to state 12
    GTE             shift and go to state 13
    LTE             shift and go to state 14
    NOTEQ           shift and go to state 15


state 6

    (1) expression -> expression AND . expression
    (1) expression -> . expression AND expression
    (2) expression -> . expression OR expression
    (3) expression -> . LPAREN expression RPAREN
    (4) expression -> . condition
    (5) condition -> . ABS LPAREN VAR MINUS VAR RPAREN GT NUMBER
    (6) condition -> . VAR EQ NUMBER
    (7) condition -> . VAR GT NUMBER
    (8) condition -> . VAR LT NUMBER
    (9) condition -> . VAR GTE NUMBER
    (10) condition -> . VAR LTE NUMBER
    (11) condition -> . VAR NOTEQ NUMBER
    (12) condition -> . VAR EQ STRING
    (13) condition -> . VAR NOTEQ STRING

    LPAREN          shift and go to state 2
    ABS             shift and go to state 4
    VAR             shift and go to state 5

    expression                     shift and go to state 16
    condition                      shift and go to state 3

state 7

    (2) expression -> expression OR . expression
    (1) expression -> . expression AND expression
    (2) expression -> . expression OR expression
    (3) expression -> . LPAREN expression RPAREN
    (4) expression -> . condition
    (5) condition -> . ABS LPAREN VAR MINUS VAR RPAREN GT NUMBER
    (6) condition -> . VAR EQ NUMBER
    (7) condition -> . VAR GT NUMBER
    (8) condition -> . VAR LT NUMBER
    (9) condition -> . VAR GTE NUMBER
    (10) condition -> . VAR LTE NUMBER
    (11) condition -> . VAR NOTEQ NUMBER
    (12) condition -> . VAR EQ STRING
    (13) condition -> . VAR NOTEQ STRING

    LPAREN          shift and go to state 2
    ABS             shift and go to state 4
    VAR             shift and go to state 5

    expression                     shift and go to state 17
    condition                      shift and go to state 3

state 8

    (3) expression -> LPAREN expression . RPAREN
    (1) expression -> expression . AND expression
    (2) expression -> expression . OR expression

    RPAREN          shift and go to state 18
    AND             shift and go to state 6
    OR              shift and go to state 7


state 9

    (5) condition -> ABS LPAREN . VAR MINUS VAR RPAREN GT NUMBER

    VAR             shift and go to state 19


state 10

    (6) condition -> VAR EQ . NUMBER
    (12) condition -> VAR EQ . STRING

    NUMBER          shift and go to state 20
    STRING          shift and go to state 21


state 11

    (7) condition -> VAR GT . NUMBER

    NUMBER          shift and go to state 22


state 12

    (8) condition -> VAR LT . NUMBER

    NUMBER          shift and go to state 23


state 13

    (9) condition -> VAR GTE . NUMBER

    NUMBER          shift and go to state 24


state 14

    (10) condition -> VAR LTE . NUMBER

    NUMBER          shift and go to state 25


state 15

    (11) condition -> VAR NOTEQ . NUMBER
    (13) condition -> VAR NOTEQ . STRING

    NUMBER          shift and go to state 26
    STRING          shift and go to state 27


state 16

    (1) expression -> expression AND expression .
    (1) expression -> expression . AND expression
    (2) expression -> expression . OR expression

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    $end            reduce using rule 1 (expression -> expression AND expression .)
    RPAREN          reduce using rule 1 (expression -> expression AND expression .)
    AND             shift and go to state 6
    OR              shift and go to state 7

  ! AND             [ reduce using rule 1 (expression -> expression AND expression .) ]
  ! OR              [ reduce using rule 1 (expression -> expression AND expression .) ]


state 17

    (2) expression -> expression OR expression .
    (1) expression -> expression . AND expression
    (2) expression -> expression . OR expression

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    $end            reduce using rule 2 (expression -> expression OR expression .)
    RPAREN          reduce using rule 2 (expression -> expression OR expression .)
    AND             shift and go to state 6
    OR              shift and go to state 7

  ! AND             [ reduce using rule 2 (expression -> expression OR expression .) ]
  ! OR              [ reduce using rule 2 (expression -> expression OR expression .) ]


state 18

    (3) expression -> LPAREN expression RPAREN .

    AND             reduce using rule 3 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 3 (expression -> LPAREN expression RPAREN .)
    $end            reduce using rule 3 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 3 (expression -> LPAREN expression RPAREN .)


state 19

    (5) condition -> ABS LPAREN VAR . MINUS VAR RPAREN GT NUMBER

    MINUS           shift and go to state 28


state 20

    (6) condition -> VAR EQ NUMBER .

    AND             reduce using rule 6 (condition -> VAR EQ NUMBER .)
    OR              reduce using rule 6 (condition -> VAR EQ NUMBER .)
    $end            reduce using rule 6 (condition -> VAR EQ NUMBER .)
    RPAREN          reduce using rule 6 (condition -> VAR EQ NUMBER .)


state 21

    (12) condition -> VAR EQ STRING .

    AND             reduce using rule 12 (condition -> VAR EQ STRING .)
    OR              reduce using rule 12 (condition -> VAR EQ STRING .)
    $end            reduce using rule 12 (condition -> VAR EQ STRING .)
    RPAREN          reduce using rule 12 (condition -> VAR EQ STRING .)


state 22

    (7) condition -> VAR GT NUMBER .

    AND             reduce using rule 7 (condition -> VAR GT NUMBER .)
    OR              reduce using rule 7 (condition -> VAR GT NUMBER .)
    $end            reduce using rule 7 (condition -> VAR GT NUMBER .)
    RPAREN          reduce using rule 7 (condition -> VAR GT NUMBER .)


state 23

    (8) condition -> VAR LT NUMBER .

    AND             reduce using rule 8 (condition -> VAR LT NUMBER .)
    OR              reduce using rule 8 (condition -> VAR LT NUMBER .)
    $end            reduce using rule 8 (condition -> VAR LT NUMBER .)
    RPAREN          reduce using rule 8 (condition -> VAR LT NUMBER .)


state 24

    (9) condition -> VAR GTE NUMBER .

    AND             reduce using rule 9 (condition -> VAR GTE NUMBER .)
    OR              reduce using rule 9 (condition -> VAR GTE NUMBER .)
    $end            reduce using rule 9 (condition -> VAR GTE NUMBER .)
    RPAREN          reduce using rule 9 (condition -> VAR GTE NUMBER .)


state 25

    (10) condition -> VAR LTE NUMBER .

    AND             reduce using rule 10 (condition -> VAR LTE NUMBER .)
    OR              reduce using rule 10 (condition -> VAR LTE NUMBER .)
    $end            reduce using rule 10 (condition -> VAR LTE NUMBER .)
    RPAREN          reduce using rule 10 (condition -> VAR LTE NUMBER .)


state 26

    (11) condition -> VAR NOTEQ NUMBER .

    AND             reduce using rule 11 (condition -> VAR NOTEQ NUMBER .)
    OR              reduce using rule 11 (condition -> VAR NOTEQ NUMBER .)
    $end            reduce using rule 11 (condition -> VAR NOTEQ NUMBER .)
    RPAREN          reduce using rule 11 (condition -> VAR NOTEQ NUMBER .)


state 27

    (13) condition -> VAR NOTEQ STRING .

    AND             reduce using rule 13 (condition -> VAR NOTEQ STRING .)
    OR              reduce using rule 13 (condition -> VAR NOTEQ STRING .)
    $end            reduce using rule 13 (condition -> VAR NOTEQ STRING .)
    RPAREN          reduce using rule 13 (condition -> VAR NOTEQ STRING .)


state 28

    (5) condition -> ABS LPAREN VAR MINUS . VAR RPAREN GT NUMBER

    VAR             shift and go to state 29


state 29

    (5) condition -> ABS LPAREN VAR MINUS VAR . RPAREN GT NUMBER

    RPAREN          shift and go to state 30


state 30

    (5) condition -> ABS LPAREN VAR MINUS VAR RPAREN . GT NUMBER

    GT              shift and go to state 31


state 31

    (5) condition -> ABS LPAREN VAR MINUS VAR RPAREN GT . NUMBER

    NUMBER          shift and go to state 32


state 32

    (5) condition -> ABS LPAREN VAR MINUS VAR RPAREN GT NUMBER .

    AND             reduce using rule 5 (condition -> ABS LPAREN VAR MINUS VAR RPAREN GT NUMBER .)
    OR              reduce using rule 5 (condition -> ABS LPAREN VAR MINUS VAR RPAREN GT NUMBER .)
    $end            reduce using rule 5 (condition -> ABS LPAREN VAR MINUS VAR RPAREN GT NUMBER .)
    RPAREN          reduce using rule 5 (condition -> ABS LPAREN VAR MINUS VAR RPAREN GT NUMBER .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for AND in state 16 resolved as shift
WARNING: shift/reduce conflict for OR in state 16 resolved as shift
WARNING: shift/reduce conflict for AND in state 17 resolved as shift
WARNING: shift/reduce conflict for OR in state 17 resolved as shift
